FROM ros:humble

# Set environment variables to avoid interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Set the working directory
WORKDIR /ros2_ws

# Install dependencies in one RUN statement
RUN apt-get update && apt-get install -y \
    nano \
    build-essential \
    cmake \
    wget \
    git \
    python3-colcon-common-extensions \
    python3-pip \
    python3-setuptools \
    python3-rosdep \
    python3-vcstool \
    ros-humble-usb-cam \
    ros-humble-image-pipeline \
    ros-humble-vision-msgs \
    libopencv-dev \
    ros-humble-image-transport \
    ros-humble-cv-bridge \
    ros-humble-camera-info-manager \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip3 install --no-cache-dir \
    adafruit-blinka \
    lgpio \
    adafruit-circuitpython-bme280 \
    gpiozero \
    pytz

# Set up the ROS 2 workspace
RUN mkdir -p /ros2_ws/src
WORKDIR /ros2_ws/src

# Clone any necessary packages here (optional)
# RUN git clone https://github.com/ros-drivers/usb_cam.git

# Go back to workspace root and build the workspace
WORKDIR /ros2_ws
RUN . /opt/ros/humble/setup.sh && colcon build --symlink-install

# Source the workspace setup file
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
RUN echo "source /ros2_ws/install/setup.bash" >> ~/.bashrc

# Create rosuser and add to video group to access USB devices
RUN groupadd -g 1001 rosuser && useradd -r -u 1001 -g rosuser rosuser
RUN adduser rosuser video

# Ensure bash is used in the container
SHELL ["/bin/bash", "-c"]

# Run bash in interactive mode by default
ENTRYPOINT ["/bin/bash", "-c", "source /opt/ros/humble/setup.bash && source /ros2_ws/install/setup.bash && exec bash"]
